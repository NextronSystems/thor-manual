.. This file is autogenerated from THOR's --help detailed output. Do not edit.

Command Line Options
====================

This section lists all options that THOR TechPreview currently offers.

Scan Options
----------------------------------------------------------------------
-t, --config <yamlfile>

           Load default scan parameters from a YAML configuration file.

           The file must contain the THOR flags as keys with the wanted values.

           The values take precedence over values from config/thor.yml which is loaded by default.

           Additionally, all values specified on the command line override any file parameters.

           Alias:
             --template

           Example:
             --config config/my-config.yaml

--config-preview

           Create a YAML configuration file generated from the provided scan parameters and write it to stdout.

           Alias:
             --generate-config


           See also:
             --config

-p, --path <path1,path2,...>

           Scan a specific file path. Define multiple paths by using this option multiple times.

           Append ':NOWALK' to the path to disable recursive scanning for this path.

           Examples:
             --path /var/log
             --path C:\logs\

--all-hard-drives

           Scan all local hard drives.

           By default, only the system drive is scanned.

           This flag is only supported on Windows; on Unix systems, all mounted local drives are scanned even without this flag.

           Alias:
             --allhds

--all-drives

           Scan all local drives or mounts, including network drives.

           Requires a Forensic Lab License.

--file-size-limit <memory>

           Specify the maximum file size to check. Files larger than this limit are ignored.

           Use 0 to disable this limit.

           Default:
             64MB

           Alias:
             --max_file_size

--log-line-limit <lines>

           Set the maximum amount of lines to check in a log file before further scanning is halted for that file.

           Default:
             1000000

           Alias:
             --max_log_lines

--process-size-limit <memory>

           Set the maximum process size for scanning.

           Processes larger than this limit are excluded from the scan.

           Default:
             2GB

           Alias:
             --max_process_size

--timeout <hours>

           Set the maximum scan duration in hours. The scan terminates once this limit is reached.

           Use 0 for no maximum runtime.

           Default:
             168

           Alias:
             --max_runtime

--no-scan-lock

           Disable scan instance locking, allowing multiple THOR scans to run simultaneously.

           This can be useful in Lab scenarios when several mounted images are scanned simultaneously on a single system.

           Requires a Forensic Lab License.

           Alias:
             --nodoublecheck

-f, --highlight-timeframe <date1,date2,...>

           Specify one or more date pairs (start and end) representing periods of known attacker activity.

           Files created or modified during these periods receive a higher detection score.

           Dates must be in YYYY-MM-DD format (start inclusive, end exclusive).

           Alias:
             --epoch

           Example:
             --highlight-timeframe 2009-10-09,2009-10-10


           See also:
             --highlight-timeframe-score

--highlight-timeframe-score <score>

           Define the additional score to assign to files modified or created during the specified attacker dates.

           Default:
             35

           Alias:
             --epochscore


           See also:
             --highlight-timeframe

--insecure

           Skip TLS host verification, e.g. to VirusTotal or to the Nextron Portal.

--ca <cert-or-file1,cert-or-file2,...>

           Provide one or more root CA certificate(s) for TLS host certificate verification during handshakes.

           These certificates will be used in addition to the system CAs (unless --no-system-ca is set).

           Examples:
             --ca path/to/ca.pem
             --ca '----BEGIN CERTIFICATE----<root cert>-----END CERTIFICATE-----'


           See also:
             --asgard-host
             --vt-key
             --portal-api-key
             --no-system-ca

--no-system-ca

           Do not use system CAs for TLS verification.

           This requires use of --ca to provide a CA for TLS verification.


           See also:
             --ca

--cross-platform-paths

           Adapt filename IOCs to match on both Windows and Unix paths.

           By default, only the current system's path style is matched.

           Alias:
             --cross-platform

--require-elevation

           Require elevated privileges (Administrator / root) to run THOR.

           Alias:
             --require-admin

--follow-symlinks

           Follow and scan directories referenced by symbolic links.

--archive-depth <depth>

           Set the maximum depth for scanning nested archives.

           Default:
             4

           Alias:
             --max-recursion-depth

--archive-file-limit <count>

           Set the maximum number of files per archive to scan.

           Warning:
             Additional files in an archive beyond this limit will be ignored.

           Default:
             10000

           Alias:
             --max-nested-objects

--custom-signatures-only

           Use only custom signatures, disabling all built-in THOR detections.

           Custom signatures must be placed in the correct subfolder of the 'custom-signatures' subdirectory in the THOR installation directory.

           There is a 'custom-signatures/yara' subdirectory for YARA rules, and so on.

           If there are no custom signatures, and this option is set, THOR will not detect any threats.

           Alias:
             --customonly

--signature-include <filter1,filter2,...>

           Load only signatures that match specific metadata fields (e.g., rule name, title, tags, or description).

           Useful for loading only signatures relevant to a specific topic.

           Use --list-signatures to list all signature and their metadata.

           Alias:
             --init-selector

           Example:
             --signature-include APT31


           See also:
             --list-signatures

--signature-exclude <filter1,filter2,...>

           Exclude signatures that match specific metadata fields (e.g.,rule name, title, tags, or description).

           This can help skipping known false positives or irrelevant rules.

           Use --list-signatures to list all signature and their metadata.

           Alias:
             --init-filter

           Example:
             --signature-exclude SUSP


           See also:
             --list-signatures


Scan Modes
----------------------------------------------------------------------
--fast

           Enables several flags that speed up checks by disabling less critical forensic modules. Prioritizes speed over depth.

           This includes:
             - Skip Windows Event Logs
             - Do not analyze the firewall configuration
             - Do not analyze user profiles
             - Do not analyze log files
             - Do not analyze windows hotfixes
             - Do not analyze the MFT
             - Analyze only files changed within the last 3 days, or in particularly relevant directories

           Alias:
             --quick


           See also:
             --exclude-component
             --lookback
             --lookback-module
             --lookback-aptdirs

--soft

           Perform a soft scan with reduced resource usage by:
             - Excluding CPU and RAM intensive modules:
               - Mutexes
               - Firewall
               - Logons
               - Network sessions and shares
               - LSA sessions
               - Open files
               - Hosts file
               - DoublePulsar check
               - Executable decompression
             - Lowering max CPU usage to 70%
             - Setting low process priority for THOR


           Activates automatically on low-resource systems (1 CPU core or <1024 MB RAM).

--deep

           Enable deep forensic analysis at the cost of high resource consumption and actions that may endanger system stability.

           This includes disabling all CPU / memory restrictions, and scanning all files.

           Alias:
             --intense

--delta

           Scan only those elements that have changed since the last scan.

           Dynamically sets --lookback for each module based on the last scan time and enables --lookback-global.

           This reduces the scan scope to only modified files, registry keys, and other elements.

           Alias:
             --diff


           See also:
             --lookback

--lookback <days>

           Limit scanning to data modified in the last N days, ignoring older logs and files.

           Set it to 0 to remove any time restriction.

           Example:
             --lookback 30


           See also:
             --lookback-module

--lookback-global

           Extend lookback filtering to all modules that support it, ensuring uniform analysis across all modules.

           By default, lookback applies only to the Eventlog module.

           Alias:
             --global-lookback

--lookback-aptdirs

           Some high-risk directories (often targeted by APT groups) are excluded from lookback filtering

           for forensic accuracy. Override those exclusions, forcing lookback filtering on all directories.


           This flag is only meaningful if --lookback is also active.

           Alias:
             --force-aptdir-lookback

--lookback-module <module1,module2,...>

           Apply selective lookback filtering based on module.

           Alias:
             --lookback-modules

           Example:
             --lookback-module Filescan

--lab

           Enable forensic lab mode optimized for forensic analysis:
             - Scan only the file system
             - Disable resource checks
             - Disable fast mode
             - Enable deep mode
             - Disable ThorDB
             - Apply IOCs platform independently
             - Use all CPU cores
             - Disable scan instance locking
             - Scan all drives by default, or limited to a provided path if combined with -p
             - Disable the signature match limit

           Requires a Forensic Lab License.


           See also:
             --module
             --no-resource-check
             --fast
             --deep
             --cross-platform-paths
             --threads
             --no-scan-lock
             --all-drives
             --match-limit

--path-remap <path-mapping1,path-mapping2,...>

           In mounted forensic images, the scanned file locations may differ from their original system locations,

           making references outdated or incorrect.

           This flag dynamically remaps paths, ensuring findings reflect the original system structure.

           The passed value must contain the original path and the new path separated by a colon.

           Supports absolute paths and drive letter mappings on Windows.

           The original path must not contain a colon.

           Requires a Forensic Lab License.

           Alias:
             --virtual-map

           Examples:
             --path-remap /mnt/image/root:/
             --path-remap F:C


Resource Options
----------------------------------------------------------------------
-c, --cpu-limit <percentage>

           Pause any THOR actions when the system-wide CPU usage exceeds the specified threshold (in percent).

           The value must be between 15% and 100%. Values outside this range are automatically clipped to it.

           A value of 100% effectively disables this limit since THOR will never pause itself.

           Default:
             95

           Alias:
             --cpulimit

--no-soft

           Disable soft mode allowing full system resource usage.


           See also:
             --soft

--no-resource-check

           Disable all checks that monitor available system resources.

           Alias:
             --no-rescontrol


           See also:
             --memory-limit
             --cpu-limit
             --log-size-limit
             --no-soft

--memory-limit <memory>

           Stop scanning if free RAM drops below the specified amount.

           This option has no impact if --no-resource-check is used.

           Default:
             50MB

           Alias:
             --minmem


           See also:
             --no-resource-check

--low-priority

           Run THOR with reduced process priority.

           This slows down the scan in favor of other system processes.

           Alias:
             --lowprio

--very-low-priority

           Run THOR with the lowest possible process priority.

           This slows down the scan in favor of other system processes.

           Alias:
             --verylowprio

--low-io-priority

           Reduce the I/O priority of the THOR process to avoid interfering with other disk operations.

           Alias:
             --lowioprio

--no-low-priority

           Prevent automatic reduction of THOR's process priority when soft mode is activated.

           Alias:
             --nolowprio


           See also:
             --soft

--no-thread-lock

           Do not bind Golang routines to threads.

           This may improve performance, however, due to thread-local storage, it may increase memory usage.

           Alias:
             --nolockthread

--yara-timeout <seconds>

           Cancel YARA scans that exceed the specified time limit in seconds.

           Default:
             90

--threads <count>

           Set the number of parallel threads THOR uses during scanning.

           Use 0 to utilize all CPU cores.

           Negative values subtract from the total available cores (e.g., -2 uses all but 2 cores).

           Default:
             1

           Examples:
             --threads 1
             --threads -2

--chunk-size <memory>

           Specify the maximum amount of data (in MB) processed together for e.g. log lines, registry entries, or other scanned data.

           Increasing this value improves performance by reducing processing overhead at the cost of increased memory usage.

           Default:
             20MB

           Alias:
             --bulk-size


Special Scan Modes
----------------------------------------------------------------------
-m, --memory-dump-file <file>

           Scan a single memory dump file for threats.

           This option is not meant for scanning disk images. For forensic disk analysis, use --lab and mount the image beforehand.

           Requires a Forensic Lab License.

           Alias:
             --image_file

           Example:
             --memory-dump-file /mnt/image.raw

--memory-dump-chunk-size <memory>

           Scan memory dumps in chunks of the specified size.

           A smaller chunk size will reduce the false positive rate while possibly increasing the false negative rate.

           Default:
             12MB

           Alias:
             --image-chunk-size

-r, --memory-dump-extraction-directory <directory>

           Restore Portable Executable (PE) files found during memory dump scanning into the specified directory.

           Alias:
             --restore_directory

           Example:
             --memory-dump-extraction-directory /tmp/restore


           See also:
             --memory-dump-extraction-score

--memory-dump-extraction-score <score>

           Restore only chunks or PE files with a total match score above the specified threshold.

           This setting applies only if a restoration directory is also specified.

           Default:
             50

           Alias:
             --restore_score


           See also:
             --memory-dump-extraction-directory

--dropzone <directory>

           Monitor and scan all files dropped into a specific directory.

           This flag disables resource checks, quick mode, and ThorDB and enables deep mode.

           Requires a Forensic Lab License.

           Example:
             --dropzone /tmp/dropzone


           See also:
             --path

--dropzone-purge

           Delete files from the drop zone after scanning.

           Requires drop zone mode.

           Alias:
             --dropdelete

--dropzone-delay <seconds>

           Wait before scanning dropped files, allowing slow file writes to complete.

           The scan begins after no write operations have been detected for the specified time (in seconds).

           Default:
             1


License Retrieval
----------------------------------------------------------------------
-q, --license-path <directory>

           Look for a license in the specified directory.

           If no license is found, THOR will try alternative methods (ASGARD or Portal).

           Default:
             /home/max/Downloads/thor-dev

           Example:
             --license-path /etc/thor

--asgard-host <host>

           Download a license from the specified ASGARD server if no local license is found.

           Alias:
             --asgard

           Examples:
             --asgard-host asgard.my-company.internal
             --asgard-host 10.121.1.13

--asgard-token <token>

           Use this token to authenticate with the License API of the ASGARD server.

           The token can be found in the 'Downloads' or 'Licensing' section in the ASGARD.

           Example:
             --asgard-token 1234567890abcdef


           See also:
             --asgard-host

--portal-api-key <key>

           Retrieve a license from portal.nextron-systems.com using this API key.

           This requires a host-based server / workstation contract.

           If no license for this host exists in the Portal, the Portal will issue a new license.

           Alias:
             --portal-key

           Example:
             --portal-api-key 1234567890abcdef

--portal-contracts <id1,id2,...>

           Specify one or more contract IDs to use when requesting a license from the Portal.

           If no contract is specified, the Portal automatically picks a contract.

           Example:
             --portal-contracts 101,102


           See also:
             --portal-api-key

--portal-existing-license

           Only use an existing license from the Portal.

           If no valid license is found, THOR exits without generating a new one.

           Alias:
             --portal-nonewlic


           See also:
             --portal-existing-license


Active Modules
----------------------------------------------------------------------
-a, --module <module1,module2,...>

           Restrict THOR to only the specified modules.

           If not used, all modules are enabled.

           Example:
             --module Eventlog,Filescan

--exclude-component <module1,module2,...>

           Disable the specified modules and features.

           This allows you to disable specific modules or features that are not needed, or cause issues on your system.

           https://thor-manual.nextron-systems.com/latest/usage/scan-modes.html contains a full list of modules and features, including a short description of each component.

           Alias:
             --disable-module

           Example:
             --exclude-component Hosts,Firewall

--mft-analysis

           Perform a detailed analysis of the MFT on the system drive.

           This flag is only supported on Windows and requires the system drive to be NTFS formatted.

           Alias:
             --mft

--collector

           Enable the Artifact Collector, which collects and compresses files of forensic interest

           into a single archive.

           This module is useful for Incident Response and Digital Forensics.

--collector-only

           Enable exclusively the Artifact Collector module for file collection and compression, disabling all other modules.

           Ideal when the focus is solely on gathering forensic artifacts.


Module Extras
----------------------------------------------------------------------
--process-id <pid1,pid2,...>

           Limit the ProcessCheck module to the specified process IDs. If omitted, all processes are scanned.

           Alias:
             --process

           Example:
             --process-id 1234

--process-dump

           Create memory dumps for processes flagged as suspicious or malicious, facilitating further analysis.

           Alias:
             --dump-procs

--process-dump-limit <count>

           Limit the number of memory dumps THOR should create for suspicious processes.

           Once this limit is reached, no further process dumps will be created.

           Default:
             10

           Alias:
             --max-procdumps


           See also:
             --process-dump

--process-dump-directory <directory>

           Store process dumps of suspicious processes in this directory.

           Default:
             /var/lib/thor

           Alias:
             --procdump-dir

           Example:
             --process-dump-directory /var/thor/dumps


           See also:
             --process-dump

-n, --eventlog-target <eventlog1,eventlog2,...>

           Scan only the specific event logs (e.g. 'Security' or 'Microsoft-Windows-Sysmon/Operational').

           If omitted, THOR scans the most relevant event logs. The complete list of these can be found at:

           https://thor-manual.nextron-systems.com/latest/usage/special-scan-modes.html#eventlog-analysis

           Example:
             --eventlog-target Security,Microsoft-Windows-Sysmon/Operational

--no-doublepulsar

           Disable detection of the DoublePulsar Backdoor.

--essential-live-registry-only

           Scan only the most important keys within the HKLM registry root.

           For example, this includes the Run key.

           This flag does not affect registry hives found on disk like the user hives. These will always be traversed and analyzed.

--log-deleted-files

           Display deleted files found in the Master File Table (MFT) as 'info' messages.

           This does not restore these files.

           Alias:
             --showdeleted


           See also:
             --mft-analysis

--files-all

           Scan all files, even those normally considered not interesting due to type, size, or filename.

           Sets the file size limit to 200MB unless specified otherwise.

           Alias:
             --allfiles

--alternate-data-streams

           Scan alternate data streams.

           This allows for the detection of hidden data streams in NTFS files, at the cost of increased scan time.

           Alias:
             --ads

--collector-output <file>

           Write the forensic artifacts collected by the Artifact Collector module to the specified ZIP file.

           Default:
             <hostname>_collector.zip


           See also:
             --collector

--collector-config <file>

           Define specific criteria for the Artifact Collector module by providing a custom configuration file.

           The configuration file declares which files should be collected and archived.

           Example:
             --collector-config /etc/thor/collector.yml


           See also:
             --collector

--collector-config-preview

           Print the default configuration for the Artifact Collector module.

           Alias:
             --collector-print-config


           See also:
             --collector-config

--collector-preview

           List files matching the Artifact Collector criteria, but do not create an archive.

           This allows you to preview the files that would be collected.

           Alias:
             --collector-dry-run


           See also:
             --collector

--collector-no-mft

           Prevents the Artifact Collector module from reading files via the Master File Table (MFT).


           See also:
             --collector

--collector-file-size-limit <memory>

           Define a file size limit for files collected by the Artifact Collector module.

           Use 0 to disable the limit.

           Alias:
             --collector-max-filesize

           Example:
             --collector-file-size-limit 50MB


           See also:
             --collector


Active Features
----------------------------------------------------------------------
--no-thordb

           Do not use or create ThorDB database for holding scan information

--memory-dumps

           Analyze memory dump files encountered during the scan.

           Alias:
             --dumpscan

--no-imphash

           Disable calculation of the import hash (imphash) for Windows executables, which is used to identify malware.

--c2-memory-analysis

           Scan process memory for presence of IPs or domain names considered malicious.

           Alias:
             --c2-in-memory

--custom-c2-memory-analysis

           Use custom C2 IOCs to scan process memory for targeted threat detection.

           Alias:
             --custom-c2-in-memory

--no-plugins

           Disable all THOR plugins, preventing custom extensions from executing during scans.

--no-mmap

           Use standard OS calls rather than memory-mapped IO to analyze file contents, except for YARA scans.


Feature Extras
----------------------------------------------------------------------
--sigma-ruleset <ruleset1,ruleset2,...>

           Load only built-in Sigma rules belonging to the specified rulesets (see https://github.com/SigmaHQ/sigma/blob/master/Releases.md).

           Options:
             core, core+, core++, emerging_threats, all.

           Example:
             --sigma-ruleset core+


           See also:
             --sigma-threshold

--pure-yara

           Restrict scanning to YARA signature based detection only, disabling all other detection mechanisms,

           including STIX, Sigma, or IOCs, and most modules and features.

--enforce-file-size-limit

           Enforce the maximum file size limit even for special files like registry hives and log files, which THOR usually scans regardless of size.

           Alias:
             --force-max-file-size


           See also:
             --file-size-limit

--process-integrity

           Use PE-Sieve and internal heuristics to analyze running processes for anomalies such as code injection and hollowing.

           This feature is only available on Windows.

--process-integrity-full

           Enhance process integrity checks to detect signs of process tampering, impersonation, and injection.

           This feature is only available on Windows.

           Alias:
             --full-proc-integrity

--tesseract-model <file>

           Load a Tesseract model file to detect file outliers.

           Tesseract can detect files that are unusual, e.g. executables in a folder for fonts.

           To create a tesseract model, use the THOR Util's tesseract command.

           If this flag is not specified, Tesseract is not used at all.

           Example:
             --tesseract-model /etc/thor/tesseract-model

--tesseract-threshold <float>

           Threshold for Tesseract outlier detection.

           It should be a value between -0.5 and 0.5; higher values are more sensitive and FP prone.

           Example:
             --tesseract-threshold 0.1

--tesseract-min-score <score>

           Minimum score given to files identified by Tesseract as an outlier.

           The score should be between 0 and 100.

--tesseract-max-score <score>

           Maximum score given to files identified by Tesseract as an outlier.

           Default:
             70

--plugin-development-mode

           Enable plugin development mode which allows loading of unpacked plugins.

           Plugins must be placed in the 'plugins' subdirectory of the THOR installation directory.

           See https://github.com/NextronSystems/thor-plugin for more information.


Excludes and Filters
----------------------------------------------------------------------
--exclude-path <regex1,regex2,...>

           Exclude files and directories that match the specified regular expressions case insensitively.

           Excluded files and directories will not be scanned or read in any way.

           Examples:
             --exclude-path ^/opt/myapp
             --exclude-path \\mydualusetool\.exe$
             --exclude-path ^C:\\Windows\\System32\\config\\.*$

--exclude-registry-key <regex1,regex2,...>

           Exclude registry keys that match the specified regular expressions case insensitively.

           Excluded registry keys will not be scanned or read in any way.

           Example:
             --exclude-registry-key 'Microsoft\\Windows NT\\CurrentVersion'

--no-builtin-registry-excludes

           Scan all live registry keys, including less relevant ones.

           By default, THOR excludes a number of less relevant live registry keys to speed up the scan.

           These keys are part of the SOFTWARE and SYSTEM hives and are not essential for most scans.


           Keys that have explicitly been excluded via the --exclude-registry-key flag will still be excluded.


           This flag does not affect registry hives found on disk like the user hives. These will always be traversed and analyzed.

           Alias:
             --full-registry

--exclude-eventlog <regex1,regex2,...>

           Exclude event logs that match the specified regular expressions case insensitively.

           Examples:
             --exclude-eventlog Security
             --exclude-eventlog Microsoft-Windows-Sysmon/Operational

--exclude-process <regex1,regex2,...>

           Exclude processes that match the specified regular expressions case insensitively.

           The regular expressions are applied to the process name, process path, and command line.

           If any of these matches, the process is excluded from the scan.

           Examples:
             --exclude-process ^C:\\Windows\\System32\\svchost\.exe$
             --exclude-process ^/usr/bin/someprocess$


Output Options
----------------------------------------------------------------------
--json <file>

           Generate a structured JSON log file containing scan results.

           Default:
             <hostname>_thor_<time>.json

           Alias:
             --jsonfile

           Example:
             --json results.json

--html <file>

           Create a human-readable HTML report summarizing scan findings.

           Default:
             <hostname>_thor_<time>.html

           Alias:
             --htmlfile

           Example:
             --html report.html

-l, --text <file>

           Generate a plaintext log file containing scan results.

           Alias:
             --log

           Example:
             --text scan.log

--no-json

           Do not generate a JSON log file.

           This flag also disables the HTML report because the report is based on the JSON log.

--no-html

           Do not generate an HTML report file.

--log-append

           Add new logs to an existing log file instead of overwriting it.

           Alias:
             --appendlog

--key-value

           Format text log files as key value pairs (key='value') for easier parsing by SIEM systems.

           Alias:
             --keyval

-o, --csv <file>

           Generate a CSV file containing MD5, file paths, and scores for all files with at least the minimum score.

           Default:
             <hostname>_files_md5s.csv

           Alias:
             --csvfile

           Example:
             --csv scan_results.csv

--no-csv

           Do not generate a CSV report.

--stats-csv <file>[=<hostname>_stats.csv]

           Generate a CSV file containing the scan summary details

           (detections, runtime, etc.).

           Alias:
             --stats-file

           Example:
             --stats-csv thor_stats.csv

-e, --output-directory <directory>

           Save all log files into the specified directory.

           Default:
             .

           Alias:
             --rebase-dir

           Example:
             --output-directory /var/thor/logs

--no-personal-data

           Remove usernames from reports to comply with data protection regulations.

           Aliases:
             --brd
             --suppress-pi

--alert-reason-limit <count>

           Set how many reasons per match are displayed in reports.

           Use 0 to disable this limit.

           Default:
             2

           Alias:
             --max-reasons

-j, --overwrite-hostname <host>

           Override the system hostname in scan reports.

           Useful when analyzing mounted forensic images.

           Requires a Forensic Lab License.

           Default:
             maxarch

           Example:
             --overwrite-hostname forensic_image1

-i, --scan-id <string>

           Assign a unique identifier to help track scan results across multiple systems.

           Example:
             --scan-id case1234

--scan-id-prefix <string>

           If --scan-id is not set, this prefix is combined with a random value to create a unique scan ID.

           Default:
             S-

--no-scan-id

           Do not automatically assign a scan ID to this scan.

           The scan ID field will remain empty unless a custom scan ID is specified.

--silent

           Run in silend mode, preventing all output to the terminal.

           Logs are still generated unless disabled.

--console-json

           Format command line output as JSON instead of as text log.

           Alias:
             --cmdjson

--console-key-value

           Format command line output as key-value pairs (key='value') instead of the usual text log format.

           Alias:
             --cmdkeyval

--encryption-key <file-or-key>

           Use this RSA public key to encrypt the JSON, CSV and text log files.

           Accepts either a raw key or a file path containing the key.

           Alias:
             --pubkey

           Examples:
             --encryption-key '----BEGIN PUBLIC KEY----....-----END PUBLIC KEY-----'
             --encryption-key /etc/thor/rsa.pub

--no-color

           Remove ANSI color formatting from command line output.

--log-message-ids

           Assign a unique identifier to each log message, ensuring duplicate log lines can be tracked.

           Alias:
             --genid

--truncate <size>

           Limit the maximum character length of any single value in logs.

           Set to 0 for no truncation.

           Default:
             2048

--print-registry-depth <depth>

           Print information about registry key traversal up to the specified depth.

           Default:
             1

           Alias:
             --registry_depth_print

--timestamp-utc

           Convert all timestamps in logs and reports to Coordinated Universal Time (UTC).

           Alias:
             --utc

--timestamp-rfc3339

           Output all timestamps in logs and reports in RFC3339 format (YYYY-MM-DD'T'HH:mm:ss'Z').

           Alias:
             --rfc3339

--reduced

           Use a reduced output mode where only high-priority messages (warnings, alerts and errors) are logged.

           Useful for concise forensic reports and streamlined analysis.

--print-licenses

           Display all available THOR licenses in the terminal.

--eventlog

           Send THOR scan results to the Windows Event Log.

           Each message will be an entry in the Application Event Log.

--local-syslog

           Log THOR scan events to the local syslog service in facility local0.

--match-limit <count>

           Set the maximum number of times a rule or IOC match will be reported.

           Use 0 for no limit.

           Default:
             100000

           Alias:
             --max-hits

--ascii

           Ensure log output contains only ASCII characters.

--match-context <context>

           Display the specified number of bytes surrounding a match.

           Default:
             50

           Alias:
             --string-context

--html-include-info

           Include information messages in the HTML report.

           Alias:
             --include-info-in-html

--audit-trail <file>[=<hostname>_audit_<time>.json.gz]

           Specify a file to save the scan results in an audit trail log file.

           The audit trail log contains not only all findings, but also data about undetected files and objects

           that were analyzed during the scan, and the relationships between them.

           Example:
             --audit-trail myhost_audittrail.json.gz

--console-background <schema>

           Adjust font colors based on terminal background. Options: default, light, dark.

           Default:
             default

           Alias:
             --background

           Example:
             --console-background dark

--hex-matches

           Print all matching strings as hex.

--log-object <objecttype1,objecttype2,...>

           Log all objects of a specified type as info messages.


           The special values "all", "*" and "none" can be used to log all or no objects, respectively.


           Optionally, a limit can be set to only log a certain number of objects of that type.

           The limit must be specified in the format "objecttype:limit", e.g. "File:1000".

           A limit of 0 is equivalent to no limit.


           THOR logs some object types by default; this flag overrides this behavior with the user-defined settings.

           Examples:
             --log-object File
             --log-object 'Amcache Entry:100'

--describe-object-type <objecttype1,objecttype2,...>

           Print a JSON schema describing the given object type.

           Examples:
             --describe-object-type File
             --describe-object-type 'Amcache Entry'

--log-size-limit <memory>

           Switch to reduced logging when the log reaches 4MB before the specified limit.

           Cancel scan if the limit is exceeded.

           Use 0 to disable this limit.

           Alias:
             --max-log-size

           Example:
             --log-size-limit 60MB


ThorDB
----------------------------------------------------------------------
--thordb-path <file>

           Set the file path where THOR stores and retrieves scan history.

           The database helps apply delta scanning and track changes across multiple scans.

           Default:
             /home/max/.local/state/thor/thor10.db

           Alias:
             --dbfile

           Example:
             --thordb-path /var/lib/thor/thor.db

--resume-only

           If a scan was interrupted previously, e.g. due to system shutdown or manual termination,

           continue from the last recorded scan position instead of starting a new scan.

           The last recorded scan position is retrieved from the THOR database.

           If no interrupted scan is found, THOR will exit with an error.


           See also:
             --resume-scan

--resume-scan

           If a scan was interrupted previously, e.g. due to system shutdown or manual termination,

           continue from the last recorded scan position instead of starting a new scan.

           The last recorded scan position is retrieved from the THOR database.

           Alias:
             --resume


Remote Logging
----------------------------------------------------------------------
-s, --remote-log <target1,target2,...>

           Send scan output to a remote server. Logs can be transmitted in multiple formats and various protocols.

           Format:
             server[:port[:logtype[:protocol]]]

               or:
                 url[:logtype]

           Supported log types:
             DEFAULT/CEF/JSON/SYSLOGJSON/SYSLOGKV

           Supported protocols:
             UDP/TCP/TCPTLS

           Supported URL schemes:
             http/https

           Defaults:
             port=514, logtype=DEFAULT, protocol=UDP

           Alias:
             --syslog

           Examples:
             --remote-log syslog1.dom.net
             --remote-log arcsight.dom.net:514:CEF:UDP
             --remote-log syslog2:4514:DEFAULT:TCP
             --remote-log syslog3:514:JSON:TCPTLS
             --remote-log https://syslog4.dom.net/api/syslog/jsonendpoint:JSON

--syslog-rfc3164

           Truncate syslog messages to 1024 bytes to comply with RFC 3164.

           This ensures compatibility with older syslog systems.

           Alias:
             --rfc3164

--syslog-rfc5424

           Truncate syslog messages to 2048 bytes to comply with RFC 5424.

           This ensures compatibility with older syslog systems.

           Alias:
             --rfc5424

--syslog-strict

           Enable strict syslog formatting (RFC 3164).

           Shortens hostname and message.

           Alias:
             --rfc

--syslog-length-limit <size>

           Limit the maximum length of syslog messages. Messages exceeding the specified byte limit will be truncated.

           Set to 0 for no truncation.

           This setting does not apply to JSON formatted syslog.

           Default:
             2048

           Alias:
             --maxsysloglength

--syslog-cef-level <severity>

           Set minimum severity level for CEF syslog logging.

           Levels:
             - Debug = 1
             - Info = 3
             - Notice = 4
             - Error = 5
             - Warning = 8
             - Alert = 10

           Default:
             4

           Alias:
             --cef_level


Reporting and Actions
----------------------------------------------------------------------
--score-info <score>

           Set the minimum score for classifying a finding as an info.

           Default:
             30

           Alias:
             --info

--score-notice <score>

           Set the minimum score for classifying a finding as a notice.

           Default:
             40

           Alias:
             --notice

--score-warning <score>

           Set the minimum score for classifying a finding as a warning.

           Default:
             60

           Alias:
             --warning

--score-alert <score>

           Set the minimum score for classifying a finding as an alert.

           Default:
             81

           Alias:
             --alert

--no-fs-errors

           Suppress filesystem related errors, preventing them from being reported.

--sigma-threshold <sigma-level>

           Set the minimum severity level for Sigma rule detections.

           Rules below this threshold are not loaded.

           Accepted values:
             informational, low, medium, high, critical.

           Default:
             high

           Alias:
             --minimum-sigma-level


           See also:
             --sigma-ruleset


THOR Remote
----------------------------------------------------------------------
--remote-host <host1,host2,...>

           Scan a remote host.

           Instead of scanning the local system, THOR will connect to the specified remote hosts and scan them.

           Alias:
             --remote

           Examples:
             --remote-host 192.168.1.10
             --remote-host sqlserver.internal.mydomain

--remote-user <username>

           Specify the username for authentication on the remote host.

           If not specified, Windows integrated authentication is used.

           Example:
             --remote-user myuser

--remote-password <password>

           Specify the password for authentication on the remote host.

           Example:
             --remote-password MySecurePass123

--remote-password-prompt

           Prompt for THOR remote password instead of specifying it in the command.

           Alias:
             --remote-prompt

--remote-debug

           Enable debug output for remote scanning.

--remote-dir <directory>

           Specify the remote directory where THOR should be uploaded before execution.

           Example:
             --remote-dir 'C:\Program Files\THOR Remote'

--remote-connections <count>

           Set the number of concurrent remote scans.

           Default:
             25

           Alias:
             --remote-workers

--remote-scan-delay <seconds>

           Set the delay in seconds between finishing scanning a remote host and starting scanning the next one.

           Default:
             30

           Alias:
             --remote-rate


VirusTotal Integration
----------------------------------------------------------------------
--vt-key <string>

           Set the VirusTotal API key for hash lookups and sample uploads.

           Example:
             --vt-key 1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef

--vt-mode <mode>

           Set VirusTotal lookup mode.

           Options:
             - limited (hash lookups only)
             - full (hash lookups and sample uploads)

           Default:
             limited

--vt-score <score>

           Set the minimum THOR detection score required for a file to be checked with VirusTotal.

           Default:
             40

--vt-accept-eula

           Confirm acceptance of the VirusTotal EULA before using the service.

           https://www.virustotal.com/en/about/terms-of-service/

--vt-wait-quota

           Wait if the VirusTotal API key quota is exceeded instead of failing immediately.

           Alias:
             --vt-wait-for-quota

--vt-verbose

           Display additional details about the upload history of a VirusTotal file.

           including


Debugging and Info
----------------------------------------------------------------------
--debug

           Enable verbose debugging output for troubleshooting scan issues.

--trace

           Enable execution tracing for deep debugging and performance analysis.

--print-files

           Display all files checked during the scan in the output.

           Alias:
             --printall

--list-signatures

           List all loaded signatures and exit.

           This includes all (both custom and built-in) YARA rules, Sigma rules, IOCs, and other detection methods.

           Alias:
             --print-signatures

--list-signatures-json

           List all loaded signatures in JSON format and exit.

           This includes all (both custom and built-in) YARA rules, Sigma rules, IOCs, and other detection methods.

           Alias:
             --print-signatures-json

--list-deepscan-criteria

           Display a structured overview of the conditions THOR applies when selecting files for deep scanning with YARA rules.

           This overview is abbreviated; THOR may use additional, more complex criteria.

           This flag does not execute a scan, it only prints the selection logic and exits.

           Alias:
             --print-deepscan-criteria

--version

           Display THOR version, signature versions, and software versions, and exit.

-h, --help <verbosity>

           Show the flags in the given verbosity and exit.

           Options:
             - short: Show only the most important flags.
             - full: Show all flags.
             - detailed: Show all flags and include longer descriptions.

           Examples:
             --help detailed
             --help full

--completions <shell>

           Generate an autocompletion script for the specified shell.

           The script allows THOR command line arguments to be automatically completed when pressing the Tab key.

           Supported shells:
             bash, zsh, fish, powershell.

           Example:
             --completions bash

